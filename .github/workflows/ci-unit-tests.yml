# This is the CI workflow for running unit tests on an Android project
# The workflow runs on every push and pull request made to the master branch
# It uses the latest version of Ubuntu and JDK 11
# It also caches the gradle dependencies to speed up the build process
# The workflow can also be manually triggered from the Actions tab

name: CI Unit Tests Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: 11
         
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Run all unit tests
        run: ./gradlew test --info
